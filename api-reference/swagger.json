{
    "openapi": "3.0.0",
    "info": {
        "contact": {}
    },
    "servers": [
    {
      "url": "http://localhost:8080/api",
      "description": "Local server"
    }
  ],
    "paths": {
        "/api/v1/adapters": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all adapters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adapters"
                ],
                "summary": "Get all adapters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page for pagination, default is 20",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field: created_at, updated_at",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ASC / DESC",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "adapters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Adapter"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Error retrieving adapters"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new adapter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adapters"
                ],
                "summary": "Create a new adapter",
                "parameters": [
                    {
                        "enum": [
                            "cloud",
                            "tool"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "Adapter details. Depending on the type parameter, fill the respective config details.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdaptCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Successfully created adapter"
                    },
                    "400": {
                        "description": "error: Error creating adapter"
                    }
                }
            }
        },
        "/api/v1/adapters/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves an adapter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adapters"
                ],
                "summary": "Get an adapter by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adapter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "adapter",
                        "schema": {
                            "$ref": "#/definitions/models.Adapter"
                        }
                    },
                    "400": {
                        "description": "error: Error retrieving adapter"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an adapter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adapters"
                ],
                "summary": "Update an adapter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Adapter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Adapter Update Data",
                        "name": "adapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AdaptUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Successfully updated adapter"
                    },
                    "400": {
                        "description": "error: Error updating adapter"
                    }
                }
            }
        },
        "/api/v1/orgs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get all organizations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page for pagination, default is 20",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field: created_at, updated_at",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ASC / DESC",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "organizations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Organization"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Error retrieving organizations"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "Organization details",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrgDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Successfully created organization"
                    },
                    "400": {
                        "description": "error: Error creating organization"
                    }
                }
            }
        },
        "/api/v1/orgs/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get an organization by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "organization",
                        "schema": {
                            "$ref": "#/definitions/models.Organization"
                        }
                    },
                    "400": {
                        "description": "error: Error retrieving organization"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update an organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization Update Data",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OrgDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Successfully updated organization"
                    },
                    "400": {
                        "description": "error: Error updating organization"
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all projects or projects for a specific organization if orgId is specified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get all projects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "org_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Active status",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page for pagination, default is 20",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order: ASC or DESC",
                        "name": "sort_order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Error retrieving projects"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project details",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Project created successfully"
                    },
                    "400": {
                        "description": "error: Error creating project"
                    }
                }
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get a project by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Project",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "project",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "400": {
                        "description": "error: Error retrieving project"
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project details",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Project updated successfully"
                    },
                    "400": {
                        "description": "error: Error updating project"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AdaptCreateDTO": {
            "type": "object",
            "required": [
                "name",
                "project_id"
            ],
            "properties": {
                "config": {
                    "$ref": "#/definitions/models.AdapterConfig"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                }
            }
        },
        "models.AdaptUpdateDTO": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/models.AdapterConfig"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Adapter": {
            "description": "Adapter details.",
            "type": "object",
            "required": [
                "name",
                "project_id",
                "type"
            ],
            "properties": {
                "active": {
                    "description": "Not required, auto-set, key for DB",
                    "type": "boolean"
                },
                "config": {
                    "$ref": "#/definitions/models.AdapterConfig"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "cloud",
                        "tool"
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.AdapterConfig": {
            "type": "object",
            "properties": {
                "cloud_config": {
                    "$ref": "#/definitions/models.CloudAdapter"
                },
                "tool_config": {
                    "$ref": "#/definitions/models.VulnerabilityAdapter"
                }
            }
        },
        "models.CloudAdapter": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "models.OrgDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "program": {
                    "type": "string"
                },
                "program_link": {
                    "type": "string"
                }
            }
        },
        "models.Organization": {
            "description": "Organization details.",
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                },
                "id": {
                    "description": "Not required, auto-generated",
                    "type": "string"
                },
                "name": {
                    "description": "Required: Name of the organization",
                    "type": "string"
                },
                "program": {
                    "description": "Optional",
                    "type": "string"
                },
                "program_link": {
                    "description": "Optional",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                }
            }
        },
        "models.ProjCreateDTO": {
            "type": "object",
            "required": [
                "name",
                "org_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "org_id": {
                    "type": "string"
                },
                "out_scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ProjUpdateDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "out_scope": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Project": {
            "description": "Project details.",
            "type": "object",
            "required": [
                "name",
                "org_id"
            ],
            "properties": {
                "active": {
                    "description": "Not required, auto-set, key for DB",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                },
                "id": {
                    "description": "Not required, auto-generated",
                    "type": "string"
                },
                "name": {
                    "description": "Required: Name of the project",
                    "type": "string"
                },
                "org_id": {
                    "description": "Required: Organization ID",
                    "type": "string"
                },
                "out_scope": {
                    "description": "Optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "updated_at": {
                    "description": "Not required, auto-set",
                    "type": "string"
                }
            }
        },
        "models.VulnerabilityAdapter": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "tool_name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Auth",
            "in": "header"
        }
    }
}